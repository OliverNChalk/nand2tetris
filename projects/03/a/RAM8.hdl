// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Route the load bit
    DMux8Way (
        in=load, sel=address[0..2],
        a=zero, b=one, c=two, d=three,
        e=four, f=five, g=six, h=seven
    );

    // Registers
    Register (in=in, load=zero, out=reg0Out);
    Register (in=in, load=one, out=reg1Out);
    Register (in=in, load=two, out=reg2Out);
    Register (in=in, load=three, out=reg3Out);
    Register (in=in, load=four, out=reg4Out);
    Register (in=in, load=five, out=reg5Out);
    Register (in=in, load=six, out=reg6Out);
    Register (in=in, load=seven, out=reg7Out);

    // Route the register output
    Mux8Way16 (
        a=reg0Out, b=reg1Out, c=reg2Out, d=reg3Out,
        e=reg4Out, f=reg5Out, g=reg6Out, h=reg7Out,
        sel=address[0..2], out=out
    );
}
