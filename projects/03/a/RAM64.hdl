// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    // Route the load bit
    DMux (in=load, sel=address[5], a=top, b=bottom);

    DMux (in=top, sel=address[4], a=first, b=second);
    DMux (in=bottom, sel=address[4], a=third, b=fourth);

    DMux (in=first, sel=address[3], a=zero, b=one);
    DMux (in=second, sel=address[3], a=two, b=three);
    DMux (in=third, sel=address[3], a=four, b=five);
    DMux (in=fourth, sel=address[3], a=six, b=seven);

    // Ram Bays
    RAM8 (in=in, load=zero, address=address[0..2], out=ram0Out);
    RAM8 (in=in, load=one, address=address[0..2], out=ram1Out);
    RAM8 (in=in, load=two, address=address[0..2], out=ram2Out);
    RAM8 (in=in, load=three, address=address[0..2], out=ram3Out);
    RAM8 (in=in, load=four, address=address[0..2], out=ram4Out);
    RAM8 (in=in, load=five, address=address[0..2], out=ram5Out);
    RAM8 (in=in, load=six, address=address[0..2], out=ram6Out);
    RAM8 (in=in, load=seven, address=address[0..2], out=ram7Out);

    // Route the ram output
    Mux16 (a=ram0Out, b=ram1Out, sel=address[3], out=firstOut);
    Mux16 (a=ram2Out, b=ram3Out, sel=address[3], out=secondOut);
    Mux16 (a=ram4Out, b=ram5Out, sel=address[3], out=thirdOut);
    Mux16 (a=ram6Out, b=ram7Out, sel=address[3], out=fourthOut);

    Mux16 (a=firstOut, b=secondOut, sel=address[4], out=topOut);
    Mux16 (a=thirdOut, b=fourthOut, sel=address[4], out=bottomOut);

    Mux16 (a=topOut, b=bottomOut, sel=address[5], out=out);
}
