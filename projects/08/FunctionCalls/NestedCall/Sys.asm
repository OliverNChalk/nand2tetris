// L8: function Sys.init 0
(Sys.init)
// L9: push constant 4000
@4000
D=A
@0
A=M
M=D
@0
M=M+1
// L10: pop pointer 0
@0
M=M-1
A=M
D=M
@3
M=D
// L11: push constant 5000
@5000
D=A
@0
A=M
M=D
@0
M=M+1
// L12: pop pointer 1
@0
M=M-1
A=M
D=M
@4
M=D
// L13: call Sys.main 0
@Sys.main.1.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@5
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Sys.main
0;JMP
(Sys.main.1.ret)
// L14: pop temp 1
@0
M=M-1
A=M
D=M
@6
M=D
// L15: label LOOP
(LOOP)
// L16: goto LOOP
@LOOP
0;JMP
// L26: function Sys.main 5
(Sys.main)
D=0
@0
A=M
M=D
@0
M=M+1
D=0
@0
A=M
M=D
@0
M=M+1
D=0
@0
A=M
M=D
@0
M=M+1
D=0
@0
A=M
M=D
@0
M=M+1
D=0
@0
A=M
M=D
@0
M=M+1
// L27: push constant 4001
@4001
D=A
@0
A=M
M=D
@0
M=M+1
// L28: pop pointer 0
@0
M=M-1
A=M
D=M
@3
M=D
// L29: push constant 5001
@5001
D=A
@0
A=M
M=D
@0
M=M+1
// L30: pop pointer 1
@0
M=M-1
A=M
D=M
@4
M=D
// L31: push constant 200
@200
D=A
@0
A=M
M=D
@0
M=M+1
// L32: pop local 1
@0
M=M-1
A=M
D=M
@13
M=D
@1
D=M
@1
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L33: push constant 40
@40
D=A
@0
A=M
M=D
@0
M=M+1
// L34: pop local 2
@0
M=M-1
A=M
D=M
@13
M=D
@1
D=M
@2
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L35: push constant 6
@6
D=A
@0
A=M
M=D
@0
M=M+1
// L36: pop local 3
@0
M=M-1
A=M
D=M
@13
M=D
@1
D=M
@3
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L37: push constant 123
@123
D=A
@0
A=M
M=D
@0
M=M+1
// L38: call Sys.add12 1
@Sys.add12.2.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@6
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Sys.add12
0;JMP
(Sys.add12.2.ret)
// L39: pop temp 0
@0
M=M-1
A=M
D=M
@5
M=D
// L40: push local 0
@1
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L41: push local 1
@1
D=M
@1
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L42: push local 2
@1
D=M
@2
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L43: push local 3
@1
D=M
@3
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L44: push local 4
@1
D=M
@4
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L45: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L46: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L47: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L48: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L49: return
@1
D=M
@10
M=D
@1
D=M
@5
D=D-A
A=D
D=M
@11
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@10
M=M-1
A=M
D=M
@4
M=D
@10
M=M-1
A=M
D=M
@3
M=D
@10
M=M-1
A=M
D=M
@2
M=D
@10
M=M-1
A=M
D=M
@1
M=D
@11
A=M
0;JMP
// L55: function Sys.add12 0
(Sys.add12)
// L56: push constant 4002
@4002
D=A
@0
A=M
M=D
@0
M=M+1
// L57: pop pointer 0
@0
M=M-1
A=M
D=M
@3
M=D
// L58: push constant 5002
@5002
D=A
@0
A=M
M=D
@0
M=M+1
// L59: pop pointer 1
@0
M=M-1
A=M
D=M
@4
M=D
// L60: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L61: push constant 12
@12
D=A
@0
A=M
M=D
@0
M=M+1
// L62: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L63: return
@1
D=M
@10
M=D
@1
D=M
@5
D=D-A
A=D
D=M
@11
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@10
M=M-1
A=M
D=M
@4
M=D
@10
M=M-1
A=M
D=M
@3
M=D
@10
M=M-1
A=M
D=M
@2
M=D
@10
M=M-1
A=M
D=M
@1
M=D
@11
A=M
0;JMP
