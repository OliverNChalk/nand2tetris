@256
D=A
@0
M=D
@Sys.init.1.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@5
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Sys.init
0;JMP
(Sys.init.1.ret)
// L11: function Sys.init 0
(Sys.init)
// L12: push constant 4
@4
D=A
@0
A=M
M=D
@0
M=M+1
// L13: call Main.fibonacci 1
@Main.fibonacci.2.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@6
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci.2.ret)
// L14: label WHILE
(WHILE)
// L15: goto WHILE
@WHILE
0;JMP
// L11: function Main.fibonacci 0
(Main.fibonacci)
// L12: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L13: push constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// L14: lt
@0
M=M-1
A=M
D=-M
@0
M=M-1
A=M
D=D+M
@LOW_LEVEL_LABEL3
D;JLT
D=0
@LOW_LEVEL_LABEL4
0;JMP
(LOW_LEVEL_LABEL3)
D=-1
(LOW_LEVEL_LABEL4)
@0
A=M
M=D
@0
M=M+1
// L15: if-goto IF_TRUE
@0
M=M-1
A=M
D=M
@IF_TRUE
D;JNE
// L16: goto IF_FALSE
@IF_FALSE
0;JMP
// L17: label IF_TRUE
(IF_TRUE)
// L18: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L19: return
@1
D=M
@10
M=D
@1
D=M
@5
D=D-A
A=D
D=M
@11
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@10
M=M-1
A=M
D=M
@4
M=D
@10
M=M-1
A=M
D=M
@3
M=D
@10
M=M-1
A=M
D=M
@2
M=D
@10
M=M-1
A=M
D=M
@1
M=D
@11
A=M
0;JMP
// L20: label IF_FALSE
(IF_FALSE)
// L21: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L22: push constant 2
@2
D=A
@0
A=M
M=D
@0
M=M+1
// L23: sub
@0
M=M-1
A=M
D=-M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L24: call Main.fibonacci 1
@Main.fibonacci.5.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@6
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci.5.ret)
// L25: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L26: push constant 1
@1
D=A
@0
A=M
M=D
@0
M=M+1
// L27: sub
@0
M=M-1
A=M
D=-M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L28: call Main.fibonacci 1
@Main.fibonacci.6.ret
D=A
@0
A=M
M=D
@0
M=M+1
@1
D=M
@0
A=M
M=D
@0
M=M+1
@2
D=M
@0
A=M
M=D
@0
M=M+1
@3
D=M
@0
A=M
M=D
@0
M=M+1
@4
D=M
@0
A=M
M=D
@0
M=M+1
@6
D=A
@0
D=M-D
@2
M=D
@0
D=M
@1
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci.6.ret)
// L29: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L30: return
@1
D=M
@10
M=D
@1
D=M
@5
D=D-A
A=D
D=M
@11
M=D
@0
M=M-1
A=M
D=M
@2
A=M
M=D
@2
D=M+1
@0
M=D
@10
M=M-1
A=M
D=M
@4
M=D
@10
M=M-1
A=M
D=M
@3
M=D
@10
M=M-1
A=M
D=M
@2
M=D
@10
M=M-1
A=M
D=M
@1
M=D
@11
A=M
0;JMP
