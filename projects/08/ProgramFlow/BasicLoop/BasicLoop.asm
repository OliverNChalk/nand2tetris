// L9: push constant 0
@0
D=A
@0
A=M
M=D
@0
M=M+1
// L10: pop local 0
@0
M=M-1
A=M
D=M
@13
M=D
@1
D=M
@0
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L11: label LOOP_START
(LOOP_START)
// L12: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L13: push local 0
@1
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L14: add
@0
M=M-1
A=M
D=M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L15: pop local 0
@0
M=M-1
A=M
D=M
@13
M=D
@1
D=M
@0
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L16: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L17: push constant 1
@1
D=A
@0
A=M
M=D
@0
M=M+1
// L18: sub
@0
M=M-1
A=M
D=-M
@0
M=M-1
A=M
D=D+M
@0
A=M
M=D
@0
M=M+1
// L19: pop argument 0
@0
M=M-1
A=M
D=M
@13
M=D
@2
D=M
@0
D=D+A
@14
M=D
@13
D=M
@14
A=M
M=D
// L20: push argument 0
@2
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
// L21: if-goto LOOP_START
@0
M=M-1
A=M
D=M
@LOOP_START
D;JNE
// L22: push local 0
@1
D=M
@0
D=D+A
A=D
D=M
@0
A=M
M=D
@0
M=M+1
