// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array mem;
    static int kbd;

    /** Initializes the keyboard. */
    function void init() {
        let kbd = 24576;

        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return mem[kbd];
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
        var int code;

        // Wait for a key to be pressed.
        while (code = 0) {
            let code = Keyboard.keyPressed();
        }

        // Wait for release.
        while (~(Keyboard.keyPressed() = 0)) {}

        // Write the character to the screen.
        if (~(code = 129)) {
            do Output.printChar(code);
        }

        return code;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var int code;
        var String s;

        // Write the message.
        do Output.printString(message);

        // Read characters until a newline is encountered.
        let s = String.new(16);
        while (true) {
            let code = Keyboard.readChar();

            // New-line encountered.
            if (code = 128) {
                do Output.println();

                return s;
            }

            // Backspace.
            if (code = 129) {
                if (s.length() > 0) {
                    do s.eraseLastChar();
                    do Output.backSpace();
                }
            } else {
                do s.appendChar(code);
            }
        }

        // NB: Unreachable.
        return s;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var String s;
        var int val;

        let s = Keyboard.readLine(message);

        return s.intValue();
    }
}
